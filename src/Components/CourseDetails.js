import React, { useState } from 'react';
import { useParams } from 'react-router-dom';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faCheckCircle } from '@fortawesome/free-solid-svg-icons';
import './CourseDetails.css';

const courseModules = {
  1: {
    title: 'React',
    modules: [
      { id: 1, type: 'text', name: 'Introduction to React', content: 'React Introduction ReactJS, also known as React, is a popular JavaScript library for building user interfaces. It is also referred to as a front-end JavaScript library. It was developed by Facebook and is widely used for creating dynamic and interactive web applications. In this article, we’ll explore the key concepts of React. What is React ? React is a JavaScript library for building user interfaces (UIs) on the web. React is a declarative, component based library that allows developers to build reusable UI components and It follows the Virtual DOM (Document Object Model) approach, which optimizes rendering performance by minimizing DOM updates. React is fast and works well with other tools and libraries.' },
      { id: 2, type: 'text', name: 'React Components', content: 'React Introduction ReactJS, also known as React, is a popular JavaScript library for building user interfaces. It is also referred to as a front-end JavaScript library. It was developed by Facebook and is widely used for creating dynamic and interactive web applications. In this article, we’ll explore the key concepts of React. What is React ? React is a JavaScript library for building user interfaces (UIs) on the web. React is a declarative, component based library that allows developers to build reusable UI components and It follows the Virtual DOM (Document Object Model) approach, which optimizes rendering performance by minimizing DOM updates. React is fast and works well with other tools and libraries.' },
      { id: 3, type: 'text', name: 'State and Props', content: 'React Introduction ReactJS, also known as React, is a popular JavaScript library for building user interfaces. It is also referred to as a front-end JavaScript library. It was developed by Facebook and is widely used for creating dynamic and interactive web applications. In this article, we’ll explore the key concepts of React. What is React ? React is a JavaScript library for building user interfaces (UIs) on the web. React is a declarative, component based library that allows developers to build reusable UI components and It follows the Virtual DOM (Document Object Model) approach, which optimizes rendering performance by minimizing DOM updates. React is fast and works well with other tools and libraries.' },
      { id: 4, type: 'text', name: 'Lifecycle Methods', content: 'React Introduction ReactJS, also known as React, is a popular JavaScript library for building user interfaces. It is also referred to as a front-end JavaScript library. It was developed by Facebook and is widely used for creating dynamic and interactive web applications. In this article, we’ll explore the key concepts of React. What is React ? React is a JavaScript library for building user interfaces (UIs) on the web. React is a declarative, component based library that allows developers to build reusable UI components and It follows the Virtual DOM (Document Object Model) approach, which optimizes rendering performance by minimizing DOM updates. React is fast and works well with other tools and libraries.' },
      { id: 5, type: 'text', name: 'React Hooks', content: 'React Introduction ReactJS, also known as React, is a popular JavaScript library for building user interfaces. It is also referred to as a front-end JavaScript library. It was developed by Facebook and is widely used for creating dynamic and interactive web applications. In this article, we’ll explore the key concepts of React. What is React ? React is a JavaScript library for building user interfaces (UIs) on the web. React is a declarative, component based library that allows developers to build reusable UI components and It follows the Virtual DOM (Document Object Model) approach, which optimizes rendering performance by minimizing DOM updates. React is fast and works well with other tools and libraries.' },
      { id: 6, type: 'text', name: 'React Router', content: 'React Introduction ReactJS, also known as React, is a popular JavaScript library for building user interfaces. It is also referred to as a front-end JavaScript library. It was developed by Facebook and is widely used for creating dynamic and interactive web applications. In this article, we’ll explore the key concepts of React. What is React ? React is a JavaScript library for building user interfaces (UIs) on the web. React is a declarative, component based library that allows developers to build reusable UI components and It follows the Virtual DOM (Document Object Model) approach, which optimizes rendering performance by minimizing DOM updates. React is fast and works well with other tools and libraries.' },
      { id: 7, type: 'text', name: 'Redux', content: 'React Introduction ReactJS, also known as React, is a popular JavaScript library for building user interfaces. It is also referred to as a front-end JavaScript library. It was developed by Facebook and is widely used for creating dynamic and interactive web applications. In this article, we’ll explore the key concepts of React. What is React ? React is a JavaScript library for building user interfaces (UIs) on the web. React is a declarative, component based library that allows developers to build reusable UI components and It follows the Virtual DOM (Document Object Model) approach, which optimizes rendering performance by minimizing DOM updates. React is fast and works well with other tools and libraries.' },
      { id: 8, type: 'text', name: 'Context API', content: 'React Introduction ReactJS, also known as React, is a popular JavaScript library for building user interfaces. It is also referred to as a front-end JavaScript library. It was developed by Facebook and is widely used for creating dynamic and interactive web applications. In this article, we’ll explore the key concepts of React. What is React ? React is a JavaScript library for building user interfaces (UIs) on the web. React is a declarative, component based library that allows developers to build reusable UI components and It follows the Virtual DOM (Document Object Model) approach, which optimizes rendering performance by minimizing DOM updates. React is fast and works well with other tools and libraries.' },
    ],
  },
    2: {
      title: 'C++',
      modules: [
        { id: 1, type: 'text', name: 'Introduction to C++', content: 'Object Oriented Programming: The prime factor in the design of object oriented programming approach is to rectify some of the faults observed in the procedure oriented languages. Following are the impressive characteristics of object-oriented programming: OOP pays more importance to data rather than function. Programs are divided into classes and their member functions. OOP follows a bottom-up approach. New data items and functions can be comfortably added whenever essential. Data is private and prevented from accessing external functions. Objects communicate with each other through functions.' },
        { id: 2, type: 'text', name: 'C++ Basics', content: 'Object Oriented Programming: The prime factor in the design of object oriented programming approach is to rectify some of the faults observed in the procedure oriented languages. Following are the impressive characteristics of object-oriented programming: OOP pays more importance to data rather than function. Programs are divided into classes and their member functions. OOP follows a bottom-up approach. New data items and functions can be comfortably added whenever essential. Data is private and prevented from accessing external functions. Objects communicate with each other through functions.' },
        { id: 3, type: 'text', name: 'Advanced C++ Concepts', content: 'Object Oriented Programming: The prime factor in the design of object oriented programming approach is to rectify some of the faults observed in the procedure oriented languages. Following are the impressive characteristics of object-oriented programming: OOP pays more importance to data rather than function. Programs are divided into classes and their member functions. OOP follows a bottom-up approach. New data items and functions can be comfortably added whenever essential. Data is private and prevented from accessing external functions. Objects communicate with each other through functions.' },
        { id: 4, type: 'text', name: 'C++ Memory Management', content: 'Object Oriented Programming: The prime factor in the design of object oriented programming approach is to rectify some of the faults observed in the procedure oriented languages. Following are the impressive characteristics of object-oriented programming: OOP pays more importance to data rather than function. Programs are divided into classes and their member functions. OOP follows a bottom-up approach. New data items and functions can be comfortably added whenever essential. Data is private and prevented from accessing external functions. Objects communicate with each other through functions.' },
        { id: 5, type: 'text', name: 'C++ Standard Library', content: 'Object Oriented Programming: The prime factor in the design of object oriented programming approach is to rectify some of the faults observed in the procedure oriented languages. Following are the impressive characteristics of object-oriented programming: OOP pays more importance to data rather than function. Programs are divided into classes and their member functions. OOP follows a bottom-up approach. New data items and functions can be comfortably added whenever essential. Data is private and prevented from accessing external functions. Objects communicate with each other through functions.' },
        { id: 6, type: 'text', name: 'Object-Oriented Programming in C++', content: 'Object Oriented Programming: The prime factor in the design of object oriented programming approach is to rectify some of the faults observed in the procedure oriented languages. Following are the impressive characteristics of object-oriented programming: OOP pays more importance to data rather than function. Programs are divided into classes and their member functions. OOP follows a bottom-up approach. New data items and functions can be comfortably added whenever essential. Data is private and prevented from accessing external functions. Objects communicate with each other through functions.' },
        { id: 7, type: 'text', name: 'C++ Data Structures', content: 'Object Oriented Programming: The prime factor in the design of object oriented programming approach is to rectify some of the faults observed in the procedure oriented languages. Following are the impressive characteristics of object-oriented programming: OOP pays more importance to data rather than function. Programs are divided into classes and their member functions. OOP follows a bottom-up approach. New data items and functions can be comfortably added whenever essential. Data is private and prevented from accessing external functions. Objects communicate with each other through functions.' },
        { id: 8, type: 'text', name: 'C++ File Handling', content: 'Object Oriented Programming: The prime factor in the design of object oriented programming approach is to rectify some of the faults observed in the procedure oriented languages. Following are the impressive characteristics of object-oriented programming: OOP pays more importance to data rather than function. Programs are divided into classes and their member functions. OOP follows a bottom-up approach. New data items and functions can be comfortably added whenever essential. Data is private and prevented from accessing external functions. Objects communicate with each other through functions.' },
      ],
    },
    3: {
      title: 'HTML',
      modules: [
        { id: 1, type: 'text', name: 'Introduction to HTML', content: 'HyperText Markup Language Initially, the documents that were shared on the WWW were text documents that were “marked-up” with extra tags to define the structural or visual aspects of the document. Another effect of this language was to add extra functionality into the document, such as links to other online pages, creating a network of interconnected documents. As computer technology and the WWW have devolved, html has continued to allow the content of web pages to evolve. Aside from just links, we now enjoy multimedia content and applications that are seamlessly integrated into dynamic web pages, allowing the WWW to do much more than facilitate the sharing of documents.' },
        { id: 2, type: 'text', name: 'HTML Elements', content: 'HyperText Markup Language Initially, the documents that were shared on the WWW were text documents that were “marked-up” with extra tags to define the structural or visual aspects of the document. Another effect of this language was to add extra functionality into the document, such as links to other online pages, creating a network of interconnected documents. As computer technology and the WWW have devolved, html has continued to allow the content of web pages to evolve. Aside from just links, we now enjoy multimedia content and applications that are seamlessly integrated into dynamic web pages, allowing the WWW to do much more than facilitate the sharing of documents.' },
        { id: 3, type: 'text', name: 'HTML Attributes', content: 'HyperText Markup Language Initially, the documents that were shared on the WWW were text documents that were “marked-up” with extra tags to define the structural or visual aspects of the document. Another effect of this language was to add extra functionality into the document, such as links to other online pages, creating a network of interconnected documents. As computer technology and the WWW have devolved, html has continued to allow the content of web pages to evolve. Aside from just links, we now enjoy multimedia content and applications that are seamlessly integrated into dynamic web pages, allowing the WWW to do much more than facilitate the sharing of documents.' },
        { id: 4, type: 'text', name: 'HTML Forms', content: 'HyperText Markup Language Initially, the documents that were shared on the WWW were text documents that were “marked-up” with extra tags to define the structural or visual aspects of the document. Another effect of this language was to add extra functionality into the document, such as links to other online pages, creating a network of interconnected documents. As computer technology and the WWW have devolved, html has continued to allow the content of web pages to evolve. Aside from just links, we now enjoy multimedia content and applications that are seamlessly integrated into dynamic web pages, allowing the WWW to do much more than facilitate the sharing of documents.' },
        { id: 5, type: 'text', name: 'HTML Tables', content: 'HyperText Markup Language Initially, the documents that were shared on the WWW were text documents that were “marked-up” with extra tags to define the structural or visual aspects of the document. Another effect of this language was to add extra functionality into the document, such as links to other online pages, creating a network of interconnected documents. As computer technology and the WWW have devolved, html has continued to allow the content of web pages to evolve. Aside from just links, we now enjoy multimedia content and applications that are seamlessly integrated into dynamic web pages, allowing the WWW to do much more than facilitate the sharing of documents.' },
        { id: 6, type: 'text', name: 'HTML Media', content: 'HyperText Markup Language Initially, the documents that were shared on the WWW were text documents that were “marked-up” with extra tags to define the structural or visual aspects of the document. Another effect of this language was to add extra functionality into the document, such as links to other online pages, creating a network of interconnected documents. As computer technology and the WWW have devolved, html has continued to allow the content of web pages to evolve. Aside from just links, we now enjoy multimedia content and applications that are seamlessly integrated into dynamic web pages, allowing the WWW to do much more than facilitate the sharing of documents.' },
        { id: 7, type: 'text', name: 'HTML5', content: 'HyperText Markup Language Initially, the documents that were shared on the WWW were text documents that were “marked-up” with extra tags to define the structural or visual aspects of the document. Another effect of this language was to add extra functionality into the document, such as links to other online pages, creating a network of interconnected documents. As computer technology and the WWW have devolved, html has continued to allow the content of web pages to evolve. Aside from just links, we now enjoy multimedia content and applications that are seamlessly integrated into dynamic web pages, allowing the WWW to do much more than facilitate the sharing of documents.' },
        { id: 8, type: 'text', name: 'HTML Semantics', content: 'HyperText Markup Language Initially, the documents that were shared on the WWW were text documents that were “marked-up” with extra tags to define the structural or visual aspects of the document. Another effect of this language was to add extra functionality into the document, such as links to other online pages, creating a network of interconnected documents. As computer technology and the WWW have devolved, html has continued to allow the content of web pages to evolve. Aside from just links, we now enjoy multimedia content and applications that are seamlessly integrated into dynamic web pages, allowing the WWW to do much more than facilitate the sharing of documents.' },
      ],
    },
    4: {
      title: 'Python',
      modules: [
        { id: 1, type: 'text', name: 'Introduction to Python', content: 'Computers and programs are everywhere in todays world. Programs affect many aspects of daily life and society as a whole. People depend on programs for communication, shopping, entertainment, health care, and countless other needs. Learning how to program computers opens the door to many careers and opportunities for building a better world. Programs consist of statements to be run one after the other. A statement describes some action to be carried out. The statement print("Good morning") instructs Python to output the message "Good morning" to the user. The statement count = 0 instructs Python to assign the integer 0 to the variable count. This chapter introduces statements for input and output, assigning variables, and basic arithmetic. Making mistakes is a normal part of programming, and the chapter includes advice on understanding error messages. The chapter ends with a short history of Python and discusses why Python has become so popular today.' },
        { id: 2, type: 'text', name: 'Python Basics', content: 'Computers and programs are everywhere in todays world. Programs affect many aspects of daily life and society as a whole. People depend on programs for communication, shopping, entertainment, health care, and countless other needs. Learning how to program computers opens the door to many careers and opportunities for building a better world. Programs consist of statements to be run one after the other. A statement describes some action to be carried out. The statement print("Good morning") instructs Python to output the message "Good morning" to the user. The statement count = 0 instructs Python to assign the integer 0 to the variable count. This chapter introduces statements for input and output, assigning variables, and basic arithmetic. Making mistakes is a normal part of programming, and the chapter includes advice on understanding error messages. The chapter ends with a short history of Python and discusses why Python has become so popular today.' },
        { id: 3, type: 'text', name: 'Python Functions', content: 'Computers and programs are everywhere in todays world. Programs affect many aspects of daily life and society as a whole. People depend on programs for communication, shopping, entertainment, health care, and countless other needs. Learning how to program computers opens the door to many careers and opportunities for building a better world. Programs consist of statements to be run one after the other. A statement describes some action to be carried out. The statement print("Good morning") instructs Python to output the message "Good morning" to the user. The statement count = 0 instructs Python to assign the integer 0 to the variable count. This chapter introduces statements for input and output, assigning variables, and basic arithmetic. Making mistakes is a normal part of programming, and the chapter includes advice on understanding error messages. The chapter ends with a short history of Python and discusses why Python has become so popular today.' },
        { id: 4, type: 'text', name: 'Python Libraries', content: 'Computers and programs are everywhere in todays world. Programs affect many aspects of daily life and society as a whole. People depend on programs for communication, shopping, entertainment, health care, and countless other needs. Learning how to program computers opens the door to many careers and opportunities for building a better world. Programs consist of statements to be run one after the other. A statement describes some action to be carried out. The statement print("Good morning") instructs Python to output the message "Good morning" to the user. The statement count = 0 instructs Python to assign the integer 0 to the variable count. This chapter introduces statements for input and output, assigning variables, and basic arithmetic. Making mistakes is a normal part of programming, and the chapter includes advice on understanding error messages. The chapter ends with a short history of Python and discusses why Python has become so popular today.' },
        { id: 5, type: 'text', name: 'Object-Oriented Programming in Python', content: 'Computers and programs are everywhere in todays world. Programs affect many aspects of daily life and society as a whole. People depend on programs for communication, shopping, entertainment, health care, and countless other needs. Learning how to program computers opens the door to many careers and opportunities for building a better world. Programs consist of statements to be run one after the other. A statement describes some action to be carried out. The statement print("Good morning") instructs Python to output the message "Good morning" to the user. The statement count = 0 instructs Python to assign the integer 0 to the variable count. This chapter introduces statements for input and output, assigning variables, and basic arithmetic. Making mistakes is a normal part of programming, and the chapter includes advice on understanding error messages. The chapter ends with a short history of Python and discusses why Python has become so popular today.' },
        { id: 6, type: 'text', name: 'Python File Handling', content: 'Computers and programs are everywhere in todays world. Programs affect many aspects of daily life and society as a whole. People depend on programs for communication, shopping, entertainment, health care, and countless other needs. Learning how to program computers opens the door to many careers and opportunities for building a better world. Programs consist of statements to be run one after the other. A statement describes some action to be carried out. The statement print("Good morning") instructs Python to output the message "Good morning" to the user. The statement count = 0 instructs Python to assign the integer 0 to the variable count. This chapter introduces statements for input and output, assigning variables, and basic arithmetic. Making mistakes is a normal part of programming, and the chapter includes advice on understanding error messages. The chapter ends with a short history of Python and discusses why Python has become so popular today.' },
        { id: 7, type: 'text', name: 'Python Data Structures', content: 'Computers and programs are everywhere in todays world. Programs affect many aspects of daily life and society as a whole. People depend on programs for communication, shopping, entertainment, health care, and countless other needs. Learning how to program computers opens the door to many careers and opportunities for building a better world. Programs consist of statements to be run one after the other. A statement describes some action to be carried out. The statement print("Good morning") instructs Python to output the message "Good morning" to the user. The statement count = 0 instructs Python to assign the integer 0 to the variable count. This chapter introduces statements for input and output, assigning variables, and basic arithmetic. Making mistakes is a normal part of programming, and the chapter includes advice on understanding error messages. The chapter ends with a short history of Python and discusses why Python has become so popular today.' },
        { id: 8, type: 'text', name: 'Advanced Python', content: 'Computers and programs are everywhere in todays world. Programs affect many aspects of daily life and society as a whole. People depend on programs for communication, shopping, entertainment, health care, and countless other needs. Learning how to program computers opens the door to many careers and opportunities for building a better world. Programs consist of statements to be run one after the other. A statement describes some action to be carried out. The statement print("Good morning") instructs Python to output the message "Good morning" to the user. The statement count = 0 instructs Python to assign the integer 0 to the variable count. This chapter introduces statements for input and output, assigning variables, and basic arithmetic. Making mistakes is a normal part of programming, and the chapter includes advice on understanding error messages. The chapter ends with a short history of Python and discusses why Python has become so popular today.' },
      ],
    },
    5: {
      title: 'Java',
      modules: [
        { id: 1, type: 'text', name: 'Introduction to Java', content: 'One of the most important concepts of a programming language is its reliability. Object Oriented Programming concept helps keeping a programming language to utmost reliable and dependable. Let’s look down upon history of Java and how does it come to existence as a programming language after C and C++. Researchers were thinking of a programming language which could be securable, reusable and support all platforms and also acts as a class-based, object-oriented with specifically designed dependencies to fix the drawbacks of existing languages like C and C++. Where C is not secured and C++ does not have the advanced characteristic. It intended to develop an application program which can be "write once and run anywhere" (WORA), which means the compiled Java code can run on all platforms that support Java.' },
        { id: 2, type: 'text', name: 'Java Basics', content: 'One of the most important concepts of a programming language is its reliability. Object Oriented Programming concept helps keeping a programming language to utmost reliable and dependable. Let’s look down upon history of Java and how does it come to existence as a programming language after C and C++. Researchers were thinking of a programming language which could be securable, reusable and support all platforms and also acts as a class-based, object-oriented with specifically designed dependencies to fix the drawbacks of existing languages like C and C++. Where C is not secured and C++ does not have the advanced characteristic. It intended to develop an application program which can be "write once and run anywhere" (WORA), which means the compiled Java code can run on all platforms that support Java.' },
        { id: 3, type: 'text', name: 'Java Object-Oriented Programming', content: 'One of the most important concepts of a programming language is its reliability. Object Oriented Programming concept helps keeping a programming language to utmost reliable and dependable. Let’s look down upon history of Java and how does it come to existence as a programming language after C and C++. Researchers were thinking of a programming language which could be securable, reusable and support all platforms and also acts as a class-based, object-oriented with specifically designed dependencies to fix the drawbacks of existing languages like C and C++. Where C is not secured and C++ does not have the advanced characteristic. It intended to develop an application program which can be "write once and run anywhere" (WORA), which means the compiled Java code can run on all platforms that support Java.' },
        { id: 4, type: 'text', name: 'Java Collections Framework', content: 'One of the most important concepts of a programming language is its reliability. Object Oriented Programming concept helps keeping a programming language to utmost reliable and dependable. Let’s look down upon history of Java and how does it come to existence as a programming language after C and C++. Researchers were thinking of a programming language which could be securable, reusable and support all platforms and also acts as a class-based, object-oriented with specifically designed dependencies to fix the drawbacks of existing languages like C and C++. Where C is not secured and C++ does not have the advanced characteristic. It intended to develop an application program which can be "write once and run anywhere" (WORA), which means the compiled Java code can run on all platforms that support Java.' },
        { id: 5, type: 'text', name: 'Java File Handling', content: 'One of the most important concepts of a programming language is its reliability. Object Oriented Programming concept helps keeping a programming language to utmost reliable and dependable. Let’s look down upon history of Java and how does it come to existence as a programming language after C and C++. Researchers were thinking of a programming language which could be securable, reusable and support all platforms and also acts as a class-based, object-oriented with specifically designed dependencies to fix the drawbacks of existing languages like C and C++. Where C is not secured and C++ does not have the advanced characteristic. It intended to develop an application program which can be "write once and run anywhere" (WORA), which means the compiled Java code can run on all platforms that support Java.' },
        { id: 6, type: 'text', name: 'Java Exception Handling', content: 'One of the most important concepts of a programming language is its reliability. Object Oriented Programming concept helps keeping a programming language to utmost reliable and dependable. Let’s look down upon history of Java and how does it come to existence as a programming language after C and C++. Researchers were thinking of a programming language which could be securable, reusable and support all platforms and also acts as a class-based, object-oriented with specifically designed dependencies to fix the drawbacks of existing languages like C and C++. Where C is not secured and C++ does not have the advanced characteristic. It intended to develop an application program which can be "write once and run anywhere" (WORA), which means the compiled Java code can run on all platforms that support Java.' },
        { id: 7, type: 'text', name: 'Java Multithreading', content: 'One of the most important concepts of a programming language is its reliability. Object Oriented Programming concept helps keeping a programming language to utmost reliable and dependable. Let’s look down upon history of Java and how does it come to existence as a programming language after C and C++. Researchers were thinking of a programming language which could be securable, reusable and support all platforms and also acts as a class-based, object-oriented with specifically designed dependencies to fix the drawbacks of existing languages like C and C++. Where C is not secured and C++ does not have the advanced characteristic. It intended to develop an application program which can be "write once and run anywhere" (WORA), which means the compiled Java code can run on all platforms that support Java.' },
        { id: 8, type: 'text', name: 'Advanced Java', content: 'One of the most important concepts of a programming language is its reliability. Object Oriented Programming concept helps keeping a programming language to utmost reliable and dependable. Let’s look down upon history of Java and how does it come to existence as a programming language after C and C++. Researchers were thinking of a programming language which could be securable, reusable and support all platforms and also acts as a class-based, object-oriented with specifically designed dependencies to fix the drawbacks of existing languages like C and C++. Where C is not secured and C++ does not have the advanced characteristic. It intended to develop an application program which can be "write once and run anywhere" (WORA), which means the compiled Java code can run on all platforms that support Java.' },
      ],
    },
    6: {
      title: 'Data Structures',
      modules: [
        { id: 1, type: 'text', name: 'Introduction to Data Structures', content: 'These lecture notes cover the key ideas involved in designing algorithms. We shall see how they depend on the design of suitable data structures, and how some structures and algorithms are more efficient than others for the same task. We will concentrate on a few basic tasks, such as storing, sorting and searching data, that underlie much of computer science, but the techniques discussed will be applicable much more generally. We will start by studying some key data structures, such as arrays, lists, queues, stacks and trees, and then move on to explore their use in a range of different searching and sorting algorithms. This leads on to the consideration of approaches for more efficient storage of data in hash tables. Finally, we will look at graph based representations and cover the kinds of algorithms needed to work efficiently with them. Throughout, we will investigate the computational efficiency of the algorithms we develop, and gain intuitions about the pros and cons of the various potential approaches for each task. We will not restrict ourselves to implementing the various data structures and algorithms in particular computer programming languages (e.g., Java, C , OCaml), but specify them in simple pseudocode that can easily be implemented in any appropriate language' },
        { id: 2, type: 'text', name: 'Arrays', content: 'These lecture notes cover the key ideas involved in designing algorithms. We shall see how they depend on the design of suitable data structures, and how some structures and algorithms are more efficient than others for the same task. We will concentrate on a few basic tasks, such as storing, sorting and searching data, that underlie much of computer science, but the techniques discussed will be applicable much more generally. We will start by studying some key data structures, such as arrays, lists, queues, stacks and trees, and then move on to explore their use in a range of different searching and sorting algorithms. This leads on to the consideration of approaches for more efficient storage of data in hash tables. Finally, we will look at graph based representations and cover the kinds of algorithms needed to work efficiently with them. Throughout, we will investigate the computational efficiency of the algorithms we develop, and gain intuitions about the pros and cons of the various potential approaches for each task. We will not restrict ourselves to implementing the various data structures and algorithms in particular computer programming languages (e.g., Java, C , OCaml), but specify them in simple pseudocode that can easily be implemented in any appropriate language' },
        { id: 3, type: 'text', name: 'Linked Lists', content: 'These lecture notes cover the key ideas involved in designing algorithms. We shall see how they depend on the design of suitable data structures, and how some structures and algorithms are more efficient than others for the same task. We will concentrate on a few basic tasks, such as storing, sorting and searching data, that underlie much of computer science, but the techniques discussed will be applicable much more generally. We will start by studying some key data structures, such as arrays, lists, queues, stacks and trees, and then move on to explore their use in a range of different searching and sorting algorithms. This leads on to the consideration of approaches for more efficient storage of data in hash tables. Finally, we will look at graph based representations and cover the kinds of algorithms needed to work efficiently with them. Throughout, we will investigate the computational efficiency of the algorithms we develop, and gain intuitions about the pros and cons of the various potential approaches for each task. We will not restrict ourselves to implementing the various data structures and algorithms in particular computer programming languages (e.g., Java, C , OCaml), but specify them in simple pseudocode that can easily be implemented in any appropriate language' },
        { id: 4, type: 'text', name: 'Stacks', content: 'These lecture notes cover the key ideas involved in designing algorithms. We shall see how they depend on the design of suitable data structures, and how some structures and algorithms are more efficient than others for the same task. We will concentrate on a few basic tasks, such as storing, sorting and searching data, that underlie much of computer science, but the techniques discussed will be applicable much more generally. We will start by studying some key data structures, such as arrays, lists, queues, stacks and trees, and then move on to explore their use in a range of different searching and sorting algorithms. This leads on to the consideration of approaches for more efficient storage of data in hash tables. Finally, we will look at graph based representations and cover the kinds of algorithms needed to work efficiently with them. Throughout, we will investigate the computational efficiency of the algorithms we develop, and gain intuitions about the pros and cons of the various potential approaches for each task. We will not restrict ourselves to implementing the various data structures and algorithms in particular computer programming languages (e.g., Java, C , OCaml), but specify them in simple pseudocode that can easily be implemented in any appropriate language' },
        { id: 5, type: 'text', name: 'Queues', content: 'These lecture notes cover the key ideas involved in designing algorithms. We shall see how they depend on the design of suitable data structures, and how some structures and algorithms are more efficient than others for the same task. We will concentrate on a few basic tasks, such as storing, sorting and searching data, that underlie much of computer science, but the techniques discussed will be applicable much more generally. We will start by studying some key data structures, such as arrays, lists, queues, stacks and trees, and then move on to explore their use in a range of different searching and sorting algorithms. This leads on to the consideration of approaches for more efficient storage of data in hash tables. Finally, we will look at graph based representations and cover the kinds of algorithms needed to work efficiently with them. Throughout, we will investigate the computational efficiency of the algorithms we develop, and gain intuitions about the pros and cons of the various potential approaches for each task. We will not restrict ourselves to implementing the various data structures and algorithms in particular computer programming languages (e.g., Java, C , OCaml), but specify them in simple pseudocode that can easily be implemented in any appropriate language' },
        { id: 6, type: 'text', name: 'Trees', content: 'These lecture notes cover the key ideas involved in designing algorithms. We shall see how they depend on the design of suitable data structures, and how some structures and algorithms are more efficient than others for the same task. We will concentrate on a few basic tasks, such as storing, sorting and searching data, that underlie much of computer science, but the techniques discussed will be applicable much more generally. We will start by studying some key data structures, such as arrays, lists, queues, stacks and trees, and then move on to explore their use in a range of different searching and sorting algorithms. This leads on to the consideration of approaches for more efficient storage of data in hash tables. Finally, we will look at graph based representations and cover the kinds of algorithms needed to work efficiently with them. Throughout, we will investigate the computational efficiency of the algorithms we develop, and gain intuitions about the pros and cons of the various potential approaches for each task. We will not restrict ourselves to implementing the various data structures and algorithms in particular computer programming languages (e.g., Java, C , OCaml), but specify them in simple pseudocode that can easily be implemented in any appropriate language' },
        { id: 7, type: 'text', name: 'Graphs', content: 'These lecture notes cover the key ideas involved in designing algorithms. We shall see how they depend on the design of suitable data structures, and how some structures and algorithms are more efficient than others for the same task. We will concentrate on a few basic tasks, such as storing, sorting and searching data, that underlie much of computer science, but the techniques discussed will be applicable much more generally. We will start by studying some key data structures, such as arrays, lists, queues, stacks and trees, and then move on to explore their use in a range of different searching and sorting algorithms. This leads on to the consideration of approaches for more efficient storage of data in hash tables. Finally, we will look at graph based representations and cover the kinds of algorithms needed to work efficiently with them. Throughout, we will investigate the computational efficiency of the algorithms we develop, and gain intuitions about the pros and cons of the various potential approaches for each task. We will not restrict ourselves to implementing the various data structures and algorithms in particular computer programming languages (e.g., Java, C , OCaml), but specify them in simple pseudocode that can easily be implemented in any appropriate language' },
        { id: 8, type: 'text', name: 'Hash Tables', content: 'These lecture notes cover the key ideas involved in designing algorithms. We shall see how they depend on the design of suitable data structures, and how some structures and algorithms are more efficient than others for the same task. We will concentrate on a few basic tasks, such as storing, sorting and searching data, that underlie much of computer science, but the techniques discussed will be applicable much more generally. We will start by studying some key data structures, such as arrays, lists, queues, stacks and trees, and then move on to explore their use in a range of different searching and sorting algorithms. This leads on to the consideration of approaches for more efficient storage of data in hash tables. Finally, we will look at graph based representations and cover the kinds of algorithms needed to work efficiently with them. Throughout, we will investigate the computational efficiency of the algorithms we develop, and gain intuitions about the pros and cons of the various potential approaches for each task. We will not restrict ourselves to implementing the various data structures and algorithms in particular computer programming languages (e.g., Java, C , OCaml), but specify them in simple pseudocode that can easily be implemented in any appropriate language' },
      ],
    },
    7: {
      title: 'DBMS',
      modules: [
        { id: 1, type: 'text', name: 'Introduction to DBMS', content: 'In computerized information system data are the basic resource of the organization. So, proper organization and management for data is required for organization to run smoothly. Database management system deals the knowledge of how data stored and managed on a computerized information system. In any organization, it requires accurate and reliable data for better decision making, ensuring privacy of data and controlling data efficiently. The examples include deposit and/or withdrawal from a bank, hotel, airline or railway reservation, purchase items from supermarkets in all cases, a database is accessed. Data are the known facts or figures that have implicit meaning. It can also be defined as it is the representation of facts, concepts or instructions in a formal manner, which is suitable for understanding and processing. Data can be represented in alphabets (A-Z, a-z), digits (0-9) and using special characters (+,-.#,$, etc) e.g: 25, “ajit” etc.' },
        { id: 2, type: 'text', name: 'DBMS Architecture', content: 'In computerized information system data are the basic resource of the organization. So, proper organization and management for data is required for organization to run smoothly. Database management system deals the knowledge of how data stored and managed on a computerized information system. In any organization, it requires accurate and reliable data for better decision making, ensuring privacy of data and controlling data efficiently. The examples include deposit and/or withdrawal from a bank, hotel, airline or railway reservation, purchase items from supermarkets in all cases, a database is accessed. Data are the known facts or figures that have implicit meaning. It can also be defined as it is the representation of facts, concepts or instructions in a formal manner, which is suitable for understanding and processing. Data can be represented in alphabets (A-Z, a-z), digits (0-9) and using special characters (+,-.#,$, etc) e.g: 25, “ajit” etc.' },
        { id: 3, type: 'text', name: 'Relational Model', content: 'In computerized information system data are the basic resource of the organization. So, proper organization and management for data is required for organization to run smoothly. Database management system deals the knowledge of how data stored and managed on a computerized information system. In any organization, it requires accurate and reliable data for better decision making, ensuring privacy of data and controlling data efficiently. The examples include deposit and/or withdrawal from a bank, hotel, airline or railway reservation, purchase items from supermarkets in all cases, a database is accessed. Data are the known facts or figures that have implicit meaning. It can also be defined as it is the representation of facts, concepts or instructions in a formal manner, which is suitable for understanding and processing. Data can be represented in alphabets (A-Z, a-z), digits (0-9) and using special characters (+,-.#,$, etc) e.g: 25, “ajit” etc.' },
        { id: 4, type: 'text', name: 'SQL', content: 'In computerized information system data are the basic resource of the organization. So, proper organization and management for data is required for organization to run smoothly. Database management system deals the knowledge of how data stored and managed on a computerized information system. In any organization, it requires accurate and reliable data for better decision making, ensuring privacy of data and controlling data efficiently. The examples include deposit and/or withdrawal from a bank, hotel, airline or railway reservation, purchase items from supermarkets in all cases, a database is accessed. Data are the known facts or figures that have implicit meaning. It can also be defined as it is the representation of facts, concepts or instructions in a formal manner, which is suitable for understanding and processing. Data can be represented in alphabets (A-Z, a-z), digits (0-9) and using special characters (+,-.#,$, etc) e.g: 25, “ajit” etc.' },
        { id: 5, type: 'text', name: 'Normalization', content: 'In computerized information system data are the basic resource of the organization. So, proper organization and management for data is required for organization to run smoothly. Database management system deals the knowledge of how data stored and managed on a computerized information system. In any organization, it requires accurate and reliable data for better decision making, ensuring privacy of data and controlling data efficiently. The examples include deposit and/or withdrawal from a bank, hotel, airline or railway reservation, purchase items from supermarkets in all cases, a database is accessed. Data are the known facts or figures that have implicit meaning. It can also be defined as it is the representation of facts, concepts or instructions in a formal manner, which is suitable for understanding and processing. Data can be represented in alphabets (A-Z, a-z), digits (0-9) and using special characters (+,-.#,$, etc) e.g: 25, “ajit” etc.' },
        { id: 6, type: 'text', name: 'Transactions', content: 'In computerized information system data are the basic resource of the organization. So, proper organization and management for data is required for organization to run smoothly. Database management system deals the knowledge of how data stored and managed on a computerized information system. In any organization, it requires accurate and reliable data for better decision making, ensuring privacy of data and controlling data efficiently. The examples include deposit and/or withdrawal from a bank, hotel, airline or railway reservation, purchase items from supermarkets in all cases, a database is accessed. Data are the known facts or figures that have implicit meaning. It can also be defined as it is the representation of facts, concepts or instructions in a formal manner, which is suitable for understanding and processing. Data can be represented in alphabets (A-Z, a-z), digits (0-9) and using special characters (+,-.#,$, etc) e.g: 25, “ajit” etc.' },
        { id: 7, type: 'text', name: 'Indexing', content: 'In computerized information system data are the basic resource of the organization. So, proper organization and management for data is required for organization to run smoothly. Database management system deals the knowledge of how data stored and managed on a computerized information system. In any organization, it requires accurate and reliable data for better decision making, ensuring privacy of data and controlling data efficiently. The examples include deposit and/or withdrawal from a bank, hotel, airline or railway reservation, purchase items from supermarkets in all cases, a database is accessed. Data are the known facts or figures that have implicit meaning. It can also be defined as it is the representation of facts, concepts or instructions in a formal manner, which is suitable for understanding and processing. Data can be represented in alphabets (A-Z, a-z), digits (0-9) and using special characters (+,-.#,$, etc) e.g: 25, “ajit” etc.' },
        { id: 8, type: 'text', name: 'NoSQL Databases', content: 'In computerized information system data are the basic resource of the organization. So, proper organization and management for data is required for organization to run smoothly. Database management system deals the knowledge of how data stored and managed on a computerized information system. In any organization, it requires accurate and reliable data for better decision making, ensuring privacy of data and controlling data efficiently. The examples include deposit and/or withdrawal from a bank, hotel, airline or railway reservation, purchase items from supermarkets in all cases, a database is accessed. Data are the known facts or figures that have implicit meaning. It can also be defined as it is the representation of facts, concepts or instructions in a formal manner, which is suitable for understanding and processing. Data can be represented in alphabets (A-Z, a-z), digits (0-9) and using special characters (+,-.#,$, etc) e.g: 25, “ajit” etc.' },
      ],
    },
    8: {
      title: 'AWS Cloud',
      modules: [
        { id: 1, type: 'text', name: 'Introduction to AWS Cloud', content: 'Provides on-demand delivery of compute power, database storage, applications, and other IT resources via the Internet. Access as many resources as you need - almost instantly. Only pay for what you use: pay-as-you-go pricing. Simple way to access servers, storage, databases and a broad set of application services over the Internet. Amazon Web Services (AWS) is a cloud services platform that owns and maintains the network-connected hardware, while you provision and use what you need via a web application.' },
        { id: 2, type: 'text', name: 'AWS Core Services', content: 'Provides on-demand delivery of compute power, database storage, applications, and other IT resources via the Internet. Access as many resources as you need - almost instantly. Only pay for what you use: pay-as-you-go pricing. Simple way to access servers, storage, databases and a broad set of application services over the Internet. Amazon Web Services (AWS) is a cloud services platform that owns and maintains the network-connected hardware, while you provision and use what you need via a web application.' },
        { id: 3, type: 'text', name: 'AWS Security', content: 'Provides on-demand delivery of compute power, database storage, applications, and other IT resources via the Internet. Access as many resources as you need - almost instantly. Only pay for what you use: pay-as-you-go pricing. Simple way to access servers, storage, databases and a broad set of application services over the Internet. Amazon Web Services (AWS) is a cloud services platform that owns and maintains the network-connected hardware, while you provision and use what you need via a web application.' },
        { id: 4, type: 'text', name: 'AWS Management Tools', content: 'Provides on-demand delivery of compute power, database storage, applications, and other IT resources via the Internet. Access as many resources as you need - almost instantly. Only pay for what you use: pay-as-you-go pricing. Simple way to access servers, storage, databases and a broad set of application services over the Internet. Amazon Web Services (AWS) is a cloud services platform that owns and maintains the network-connected hardware, while you provision and use what you need via a web application.' },
        { id: 5, type: 'text', name: 'AWS Databases', content: 'Provides on-demand delivery of compute power, database storage, applications, and other IT resources via the Internet. Access as many resources as you need - almost instantly. Only pay for what you use: pay-as-you-go pricing. Simple way to access servers, storage, databases and a broad set of application services over the Internet. Amazon Web Services (AWS) is a cloud services platform that owns and maintains the network-connected hardware, while you provision and use what you need via a web application.' },
        { id: 6, type: 'text', name: 'AWS Storage Services', content: 'Provides on-demand delivery of compute power, database storage, applications, and other IT resources via the Internet. Access as many resources as you need - almost instantly. Only pay for what you use: pay-as-you-go pricing. Simple way to access servers, storage, databases and a broad set of application services over the Internet. Amazon Web Services (AWS) is a cloud services platform that owns and maintains the network-connected hardware, while you provision and use what you need via a web application.' },
        { id: 7, type: 'text', name: 'AWS Networking', content: 'Provides on-demand delivery of compute power, database storage, applications, and other IT resources via the Internet. Access as many resources as you need - almost instantly. Only pay for what you use: pay-as-you-go pricing. Simple way to access servers, storage, databases and a broad set of application services over the Internet. Amazon Web Services (AWS) is a cloud services platform that owns and maintains the network-connected hardware, while you provision and use what you need via a web application.' },
        { id: 8, type: 'text', name: 'AWS Machine Learning', content: 'Provides on-demand delivery of compute power, database storage, applications, and other IT resources via the Internet. Access as many resources as you need - almost instantly. Only pay for what you use: pay-as-you-go pricing. Simple way to access servers, storage, databases and a broad set of application services over the Internet. Amazon Web Services (AWS) is a cloud services platform that owns and maintains the network-connected hardware, while you provision and use what you need via a web application.' },
      ],
    },
    9: {
      title: 'Machine Learning',
      modules: [
        { id: 1, type: 'text', name: 'Introduction to Machine Learning', content: 'Over the past two decades Machine Learning has become one of the mainstays of information technology and with that, a rather central, albeit usually hidden, part of our life. With the ever increasing amounts of data becoming available there is good reason to believe that smart data analysis will become even more pervasive as a necessary ingredient for technological progress. The purpose of this chapter is to provide the reader with an overview over the vast range of applications which have at their heart a machine learning problem and to bring some degree of order to the zoo of problems. After that, we will discuss some basic tools from statistics and probability theory, since they form the language in which many machine learning problems must be phrased to become amenable to solving. Finally, we will outline a set of fairly basic yet effective algorithms to solve an important problem, namely that of classification. More sophisticated tools, a discussion of more general problems and a detailed analysis will follow in later parts of the book.' },
        { id: 2, type: 'text', name: 'Supervised Learning', content: 'Over the past two decades Machine Learning has become one of the mainstays of information technology and with that, a rather central, albeit usually hidden, part of our life. With the ever increasing amounts of data becoming available there is good reason to believe that smart data analysis will become even more pervasive as a necessary ingredient for technological progress. The purpose of this chapter is to provide the reader with an overview over the vast range of applications which have at their heart a machine learning problem and to bring some degree of order to the zoo of problems. After that, we will discuss some basic tools from statistics and probability theory, since they form the language in which many machine learning problems must be phrased to become amenable to solving. Finally, we will outline a set of fairly basic yet effective algorithms to solve an important problem, namely that of classification. More sophisticated tools, a discussion of more general problems and a detailed analysis will follow in later parts of the book.' },
        { id: 3, type: 'text', name: 'Unsupervised Learning', content: 'Over the past two decades Machine Learning has become one of the mainstays of information technology and with that, a rather central, albeit usually hidden, part of our life. With the ever increasing amounts of data becoming available there is good reason to believe that smart data analysis will become even more pervasive as a necessary ingredient for technological progress. The purpose of this chapter is to provide the reader with an overview over the vast range of applications which have at their heart a machine learning problem and to bring some degree of order to the zoo of problems. After that, we will discuss some basic tools from statistics and probability theory, since they form the language in which many machine learning problems must be phrased to become amenable to solving. Finally, we will outline a set of fairly basic yet effective algorithms to solve an important problem, namely that of classification. More sophisticated tools, a discussion of more general problems and a detailed analysis will follow in later parts of the book.' },
        { id: 4, type: 'text', name: 'Reinforcement Learning', content: 'Over the past two decades Machine Learning has become one of the mainstays of information technology and with that, a rather central, albeit usually hidden, part of our life. With the ever increasing amounts of data becoming available there is good reason to believe that smart data analysis will become even more pervasive as a necessary ingredient for technological progress. The purpose of this chapter is to provide the reader with an overview over the vast range of applications which have at their heart a machine learning problem and to bring some degree of order to the zoo of problems. After that, we will discuss some basic tools from statistics and probability theory, since they form the language in which many machine learning problems must be phrased to become amenable to solving. Finally, we will outline a set of fairly basic yet effective algorithms to solve an important problem, namely that of classification. More sophisticated tools, a discussion of more general problems and a detailed analysis will follow in later parts of the book.' },
        { id: 5, type: 'text', name: 'Neural Networks', content: 'Over the past two decades Machine Learning has become one of the mainstays of information technology and with that, a rather central, albeit usually hidden, part of our life. With the ever increasing amounts of data becoming available there is good reason to believe that smart data analysis will become even more pervasive as a necessary ingredient for technological progress. The purpose of this chapter is to provide the reader with an overview over the vast range of applications which have at their heart a machine learning problem and to bring some degree of order to the zoo of problems. After that, we will discuss some basic tools from statistics and probability theory, since they form the language in which many machine learning problems must be phrased to become amenable to solving. Finally, we will outline a set of fairly basic yet effective algorithms to solve an important problem, namely that of classification. More sophisticated tools, a discussion of more general problems and a detailed analysis will follow in later parts of the book.' },
        { id: 6, type: 'text', name: 'Decision Trees', content: 'Over the past two decades Machine Learning has become one of the mainstays of information technology and with that, a rather central, albeit usually hidden, part of our life. With the ever increasing amounts of data becoming available there is good reason to believe that smart data analysis will become even more pervasive as a necessary ingredient for technological progress. The purpose of this chapter is to provide the reader with an overview over the vast range of applications which have at their heart a machine learning problem and to bring some degree of order to the zoo of problems. After that, we will discuss some basic tools from statistics and probability theory, since they form the language in which many machine learning problems must be phrased to become amenable to solving. Finally, we will outline a set of fairly basic yet effective algorithms to solve an important problem, namely that of classification. More sophisticated tools, a discussion of more general problems and a detailed analysis will follow in later parts of the book.' },
        { id: 7, type: 'text', name: 'Clustering', content: 'Over the past two decades Machine Learning has become one of the mainstays of information technology and with that, a rather central, albeit usually hidden, part of our life. With the ever increasing amounts of data becoming available there is good reason to believe that smart data analysis will become even more pervasive as a necessary ingredient for technological progress. The purpose of this chapter is to provide the reader with an overview over the vast range of applications which have at their heart a machine learning problem and to bring some degree of order to the zoo of problems. After that, we will discuss some basic tools from statistics and probability theory, since they form the language in which many machine learning problems must be phrased to become amenable to solving. Finally, we will outline a set of fairly basic yet effective algorithms to solve an important problem, namely that of classification. More sophisticated tools, a discussion of more general problems and a detailed analysis will follow in later parts of the book.' },
        { id: 8, type: 'text', name: 'Dimensionality Reduction', content: 'Over the past two decades Machine Learning has become one of the mainstays of information technology and with that, a rather central, albeit usually hidden, part of our life. With the ever increasing amounts of data becoming available there is good reason to believe that smart data analysis will become even more pervasive as a necessary ingredient for technological progress. The purpose of this chapter is to provide the reader with an overview over the vast range of applications which have at their heart a machine learning problem and to bring some degree of order to the zoo of problems. After that, we will discuss some basic tools from statistics and probability theory, since they form the language in which many machine learning problems must be phrased to become amenable to solving. Finally, we will outline a set of fairly basic yet effective algorithms to solve an important problem, namely that of classification. More sophisticated tools, a discussion of more general problems and a detailed analysis will follow in later parts of the book.' },
      ],
    },
    10: {
      title: 'Deep Learning',
      modules: [
        { id: 1, type: 'text', name: 'Introduction to Deep Learning', content: 'The human brain is the incredible organ that dictates the signals received from sound, sight, smell, touch,and taste. Brain  stores   emotions,   experiences,   memories,   and even dreams. The brain  takes  decisions,solves many  problems   that   even  the powerful supercomputers lack [1].  Based   on   this, researchers aredreamed  of  constructing intelligent  machines like the  brain. Later researchers  invented robots to  assisthuman  activities, automatic disease  detection microscopes, and  self-driving cars. These inventions stillrequired human   interventions  to do some computational  problems.  To tackle this problem,  researcherswant to build a machine that can learn by themselves and solves more complex problems in the speed ofthe human brain. These necessities pave the way to the most active field of artificial machine intelligencecalled deep learning.' },
        { id: 2, type: 'text', name: 'Convolutional Neural Networks', content: 'The human brain is the incredible organ that dictates the signals received from sound, sight, smell, touch,and taste. Brain  stores   emotions,   experiences,   memories,   and even dreams. The brain  takes  decisions,solves many  problems   that   even  the powerful supercomputers lack [1].  Based   on   this, researchers aredreamed  of  constructing intelligent  machines like the  brain. Later researchers  invented robots to  assisthuman  activities, automatic disease  detection microscopes, and  self-driving cars. These inventions stillrequired human   interventions  to do some computational  problems.  To tackle this problem,  researcherswant to build a machine that can learn by themselves and solves more complex problems in the speed ofthe human brain. These necessities pave the way to the most active field of artificial machine intelligencecalled deep learning.' },
        { id: 3, type: 'text', name: 'Recurrent Neural Networks', content: 'The human brain is the incredible organ that dictates the signals received from sound, sight, smell, touch,and taste. Brain  stores   emotions,   experiences,   memories,   and even dreams. The brain  takes  decisions,solves many  problems   that   even  the powerful supercomputers lack [1].  Based   on   this, researchers aredreamed  of  constructing intelligent  machines like the  brain. Later researchers  invented robots to  assisthuman  activities, automatic disease  detection microscopes, and  self-driving cars. These inventions stillrequired human   interventions  to do some computational  problems.  To tackle this problem,  researcherswant to build a machine that can learn by themselves and solves more complex problems in the speed ofthe human brain. These necessities pave the way to the most active field of artificial machine intelligencecalled deep learning.' },
        { id: 4, type: 'text', name: 'Autoencoders', content: 'The human brain is the incredible organ that dictates the signals received from sound, sight, smell, touch,and taste. Brain  stores   emotions,   experiences,   memories,   and even dreams. The brain  takes  decisions,solves many  problems   that   even  the powerful supercomputers lack [1].  Based   on   this, researchers aredreamed  of  constructing intelligent  machines like the  brain. Later researchers  invented robots to  assisthuman  activities, automatic disease  detection microscopes, and  self-driving cars. These inventions stillrequired human   interventions  to do some computational  problems.  To tackle this problem,  researcherswant to build a machine that can learn by themselves and solves more complex problems in the speed ofthe human brain. These necessities pave the way to the most active field of artificial machine intelligencecalled deep learning.' },
        { id: 5, type: 'text', name: 'Generative Adversarial Networks', content: 'The human brain is the incredible organ that dictates the signals received from sound, sight, smell, touch,and taste. Brain  stores   emotions,   experiences,   memories,   and even dreams. The brain  takes  decisions,solves many  problems   that   even  the powerful supercomputers lack [1].  Based   on   this, researchers aredreamed  of  constructing intelligent  machines like the  brain. Later researchers  invented robots to  assisthuman  activities, automatic disease  detection microscopes, and  self-driving cars. These inventions stillrequired human   interventions  to do some computational  problems.  To tackle this problem,  researcherswant to build a machine that can learn by themselves and solves more complex problems in the speed ofthe human brain. These necessities pave the way to the most active field of artificial machine intelligencecalled deep learning.' },
        { id: 6, type: 'text', name: 'Transfer Learning', content: 'The human brain is the incredible organ that dictates the signals received from sound, sight, smell, touch,and taste. Brain  stores   emotions,   experiences,   memories,   and even dreams. The brain  takes  decisions,solves many  problems   that   even  the powerful supercomputers lack [1].  Based   on   this, researchers aredreamed  of  constructing intelligent  machines like the  brain. Later researchers  invented robots to  assisthuman  activities, automatic disease  detection microscopes, and  self-driving cars. These inventions stillrequired human   interventions  to do some computational  problems.  To tackle this problem,  researcherswant to build a machine that can learn by themselves and solves more complex problems in the speed ofthe human brain. These necessities pave the way to the most active field of artificial machine intelligencecalled deep learning.' },
        { id: 7, type: 'text', name: 'Natural Language Processing', content: 'The human brain is the incredible organ that dictates the signals received from sound, sight, smell, touch,and taste. Brain  stores   emotions,   experiences,   memories,   and even dreams. The brain  takes  decisions,solves many  problems   that   even  the powerful supercomputers lack [1].  Based   on   this, researchers aredreamed  of  constructing intelligent  machines like the  brain. Later researchers  invented robots to  assisthuman  activities, automatic disease  detection microscopes, and  self-driving cars. These inventions stillrequired human   interventions  to do some computational  problems.  To tackle this problem,  researcherswant to build a machine that can learn by themselves and solves more complex problems in the speed ofthe human brain. These necessities pave the way to the most active field of artificial machine intelligencecalled deep learning.' },
        { id: 8, type: 'text', name: 'Deep Reinforcement Learning', content: 'The human brain is the incredible organ that dictates the signals received from sound, sight, smell, touch,and taste. Brain  stores   emotions,   experiences,   memories,   and even dreams. The brain  takes  decisions,solves many  problems   that   even  the powerful supercomputers lack [1].  Based   on   this, researchers aredreamed  of  constructing intelligent  machines like the  brain. Later researchers  invented robots to  assisthuman  activities, automatic disease  detection microscopes, and  self-driving cars. These inventions stillrequired human   interventions  to do some computational  problems.  To tackle this problem,  researcherswant to build a machine that can learn by themselves and solves more complex problems in the speed ofthe human brain. These necessities pave the way to the most active field of artificial machine intelligencecalled deep learning.' },
      ],
    },
    11: {
      title: 'Artificial Intelligence',
      modules: [
        { id: 1, type: 'text', name: 'Introduction to Artificial Intelligence', content: 'Artiﬁcial Intelligence (AI) is a domain of computer science which deals with thedevelopment of intelligent computer systems, which are capable to perceive, analyze,and react accordingly to the inputs [1,2]. It is well-known fact that humans are consid-ered as the most intelligent and smart species on earth. The features which have helpedthem to bag this title include the ability to think, apply logic, do reasoning, under-stand the complexity, and make decisions on their own. They can also do planning,innovation, and solve problems to a greater extent. Since the era of invention of ﬁre toreaching the Mars, man has invented many things for the beneﬁt of humans. One such invention is the computer, which plays a signiﬁcant role in reducing the workload ofhumans and solving many complex mathematical and logical problems. However,for researchers, it can be considered that sky is not the limit for new inventions. So,they tried to create a “man-made homosapien” species, which can be related to theworld of computers in the form of AI (which are Artiﬁcial, i.e., manmade, and Intel-ligence, i.e., has thinking power). If a system can have the basic skills like learning,reasoning, self-improvement (by learning from experience), language understanding,and solving problems, then it can be assumed that there is the existence of AI' },
        { id: 2, type: 'text', name: 'AI Search Algorithms', content: 'Artiﬁcial Intelligence (AI) is a domain of computer science which deals with thedevelopment of intelligent computer systems, which are capable to perceive, analyze,and react accordingly to the inputs [1,2]. It is well-known fact that humans are consid-ered as the most intelligent and smart species on earth. The features which have helpedthem to bag this title include the ability to think, apply logic, do reasoning, under-stand the complexity, and make decisions on their own. They can also do planning,innovation, and solve problems to a greater extent. Since the era of invention of ﬁre toreaching the Mars, man has invented many things for the beneﬁt of humans. One such invention is the computer, which plays a signiﬁcant role in reducing the workload ofhumans and solving many complex mathematical and logical problems. However,for researchers, it can be considered that sky is not the limit for new inventions. So,they tried to create a “man-made homosapien” species, which can be related to theworld of computers in the form of AI (which are Artiﬁcial, i.e., manmade, and Intel-ligence, i.e., has thinking power). If a system can have the basic skills like learning,reasoning, self-improvement (by learning from experience), language understanding,and solving problems, then it can be assumed that there is the existence of AI' },
        { id: 3, type: 'text', name: 'Expert Systems', content: 'Artiﬁcial Intelligence (AI) is a domain of computer science which deals with thedevelopment of intelligent computer systems, which are capable to perceive, analyze,and react accordingly to the inputs [1,2]. It is well-known fact that humans are consid-ered as the most intelligent and smart species on earth. The features which have helpedthem to bag this title include the ability to think, apply logic, do reasoning, under-stand the complexity, and make decisions on their own. They can also do planning,innovation, and solve problems to a greater extent. Since the era of invention of ﬁre toreaching the Mars, man has invented many things for the beneﬁt of humans. One such invention is the computer, which plays a signiﬁcant role in reducing the workload ofhumans and solving many complex mathematical and logical problems. However,for researchers, it can be considered that sky is not the limit for new inventions. So,they tried to create a “man-made homosapien” species, which can be related to theworld of computers in the form of AI (which are Artiﬁcial, i.e., manmade, and Intel-ligence, i.e., has thinking power). If a system can have the basic skills like learning,reasoning, self-improvement (by learning from experience), language understanding,and solving problems, then it can be assumed that there is the existence of AI' },
        { id: 4, type: 'text', name: 'Natural Language Processing', content: 'Artiﬁcial Intelligence (AI) is a domain of computer science which deals with thedevelopment of intelligent computer systems, which are capable to perceive, analyze,and react accordingly to the inputs [1,2]. It is well-known fact that humans are consid-ered as the most intelligent and smart species on earth. The features which have helpedthem to bag this title include the ability to think, apply logic, do reasoning, under-stand the complexity, and make decisions on their own. They can also do planning,innovation, and solve problems to a greater extent. Since the era of invention of ﬁre toreaching the Mars, man has invented many things for the beneﬁt of humans. One such invention is the computer, which plays a signiﬁcant role in reducing the workload ofhumans and solving many complex mathematical and logical problems. However,for researchers, it can be considered that sky is not the limit for new inventions. So,they tried to create a “man-made homosapien” species, which can be related to theworld of computers in the form of AI (which are Artiﬁcial, i.e., manmade, and Intel-ligence, i.e., has thinking power). If a system can have the basic skills like learning,reasoning, self-improvement (by learning from experience), language understanding,and solving problems, then it can be assumed that there is the existence of AI' },
        { id: 5, type: 'text', name: 'Robotics', content: 'Artiﬁcial Intelligence (AI) is a domain of computer science which deals with thedevelopment of intelligent computer systems, which are capable to perceive, analyze,and react accordingly to the inputs [1,2]. It is well-known fact that humans are consid-ered as the most intelligent and smart species on earth. The features which have helpedthem to bag this title include the ability to think, apply logic, do reasoning, under-stand the complexity, and make decisions on their own. They can also do planning,innovation, and solve problems to a greater extent. Since the era of invention of ﬁre toreaching the Mars, man has invented many things for the beneﬁt of humans. One such invention is the computer, which plays a signiﬁcant role in reducing the workload ofhumans and solving many complex mathematical and logical problems. However,for researchers, it can be considered that sky is not the limit for new inventions. So,they tried to create a “man-made homosapien” species, which can be related to theworld of computers in the form of AI (which are Artiﬁcial, i.e., manmade, and Intel-ligence, i.e., has thinking power). If a system can have the basic skills like learning,reasoning, self-improvement (by learning from experience), language understanding,and solving problems, then it can be assumed that there is the existence of AI' },
        { id: 6, type: 'text', name: 'Machine Learning', content: 'Artiﬁcial Intelligence (AI) is a domain of computer science which deals with thedevelopment of intelligent computer systems, which are capable to perceive, analyze,and react accordingly to the inputs [1,2]. It is well-known fact that humans are consid-ered as the most intelligent and smart species on earth. The features which have helpedthem to bag this title include the ability to think, apply logic, do reasoning, under-stand the complexity, and make decisions on their own. They can also do planning,innovation, and solve problems to a greater extent. Since the era of invention of ﬁre toreaching the Mars, man has invented many things for the beneﬁt of humans. One such invention is the computer, which plays a signiﬁcant role in reducing the workload ofhumans and solving many complex mathematical and logical problems. However,for researchers, it can be considered that sky is not the limit for new inventions. So,they tried to create a “man-made homosapien” species, which can be related to theworld of computers in the form of AI (which are Artiﬁcial, i.e., manmade, and Intel-ligence, i.e., has thinking power). If a system can have the basic skills like learning,reasoning, self-improvement (by learning from experience), language understanding,and solving problems, then it can be assumed that there is the existence of AI' },
        { id: 7, type: 'text', name: 'AI Ethics', content: 'Artiﬁcial Intelligence (AI) is a domain of computer science which deals with thedevelopment of intelligent computer systems, which are capable to perceive, analyze,and react accordingly to the inputs [1,2]. It is well-known fact that humans are consid-ered as the most intelligent and smart species on earth. The features which have helpedthem to bag this title include the ability to think, apply logic, do reasoning, under-stand the complexity, and make decisions on their own. They can also do planning,innovation, and solve problems to a greater extent. Since the era of invention of ﬁre toreaching the Mars, man has invented many things for the beneﬁt of humans. One such invention is the computer, which plays a signiﬁcant role in reducing the workload ofhumans and solving many complex mathematical and logical problems. However,for researchers, it can be considered that sky is not the limit for new inventions. So,they tried to create a “man-made homosapien” species, which can be related to theworld of computers in the form of AI (which are Artiﬁcial, i.e., manmade, and Intel-ligence, i.e., has thinking power). If a system can have the basic skills like learning,reasoning, self-improvement (by learning from experience), language understanding,and solving problems, then it can be assumed that there is the existence of AI' },
        { id: 8, type: 'text', name: 'Future of AI', content: 'Artiﬁcial Intelligence (AI) is a domain of computer science which deals with thedevelopment of intelligent computer systems, which are capable to perceive, analyze,and react accordingly to the inputs [1,2]. It is well-known fact that humans are consid-ered as the most intelligent and smart species on earth. The features which have helpedthem to bag this title include the ability to think, apply logic, do reasoning, under-stand the complexity, and make decisions on their own. They can also do planning,innovation, and solve problems to a greater extent. Since the era of invention of ﬁre toreaching the Mars, man has invented many things for the beneﬁt of humans. One such invention is the computer, which plays a signiﬁcant role in reducing the workload ofhumans and solving many complex mathematical and logical problems. However,for researchers, it can be considered that sky is not the limit for new inventions. So,they tried to create a “man-made homosapien” species, which can be related to theworld of computers in the form of AI (which are Artiﬁcial, i.e., manmade, and Intel-ligence, i.e., has thinking power). If a system can have the basic skills like learning,reasoning, self-improvement (by learning from experience), language understanding,and solving problems, then it can be assumed that there is the existence of AI' },
      ],
    },
    12: {
      title: 'MySQL',
      modules: [
        { id: 1, type: 'text', name: 'Introduction to MySQL', content: 'This chapter provides a tutorial introduction to MySQL by showing how to use the mysql client program to create and use a simple database. mysql (sometimes referred to as the “terminal monitor” or just “monitor”) is an interactive program that enables you to connect to a MySQL server, run queries, and view the results. mysql may also be used in batch mode: you place your queries in a file beforehand, then tell mysql to execute the contents of the file. Both ways of using mysql are covered here. To see a list of options provided by mysql, invoke it with the --help option: $> mysql --help This chapter assumes that mysql is installed on your machine and that a MySQL server is available to which you can connect. If this is not true, contact your MySQL administrator. (If you are the administrator, you need to consult the relevant portions of this manual, such as MySQL Server Administration.) This chapter describes the entire process of setting up and using a database. If you are interested only in accessing an existing database, you may want to skip the sections that describe how to create the database and the tables it contains. Because this chapter is tutorial in nature, many details are necessarily omitted. Consult the relevant sections of the manual for more information on the topics covered here.' },
        { id: 2, type: 'text', name: 'MySQL Installation', content: 'This chapter provides a tutorial introduction to MySQL by showing how to use the mysql client program to create and use a simple database. mysql (sometimes referred to as the “terminal monitor” or just “monitor”) is an interactive program that enables you to connect to a MySQL server, run queries, and view the results. mysql may also be used in batch mode: you place your queries in a file beforehand, then tell mysql to execute the contents of the file. Both ways of using mysql are covered here. To see a list of options provided by mysql, invoke it with the --help option: $> mysql --help This chapter assumes that mysql is installed on your machine and that a MySQL server is available to which you can connect. If this is not true, contact your MySQL administrator. (If you are the administrator, you need to consult the relevant portions of this manual, such as MySQL Server Administration.) This chapter describes the entire process of setting up and using a database. If you are interested only in accessing an existing database, you may want to skip the sections that describe how to create the database and the tables it contains. Because this chapter is tutorial in nature, many details are necessarily omitted. Consult the relevant sections of the manual for more information on the topics covered here.' },
        { id: 3, type: 'text', name: 'Basic SQL Commands', content: 'This chapter provides a tutorial introduction to MySQL by showing how to use the mysql client program to create and use a simple database. mysql (sometimes referred to as the “terminal monitor” or just “monitor”) is an interactive program that enables you to connect to a MySQL server, run queries, and view the results. mysql may also be used in batch mode: you place your queries in a file beforehand, then tell mysql to execute the contents of the file. Both ways of using mysql are covered here. To see a list of options provided by mysql, invoke it with the --help option: $> mysql --help This chapter assumes that mysql is installed on your machine and that a MySQL server is available to which you can connect. If this is not true, contact your MySQL administrator. (If you are the administrator, you need to consult the relevant portions of this manual, such as MySQL Server Administration.) This chapter describes the entire process of setting up and using a database. If you are interested only in accessing an existing database, you may want to skip the sections that describe how to create the database and the tables it contains. Because this chapter is tutorial in nature, many details are necessarily omitted. Consult the relevant sections of the manual for more information on the topics covered here.' },
        { id: 4, type: 'text', name: 'Joins in MySQL', content: 'This chapter provides a tutorial introduction to MySQL by showing how to use the mysql client program to create and use a simple database. mysql (sometimes referred to as the “terminal monitor” or just “monitor”) is an interactive program that enables you to connect to a MySQL server, run queries, and view the results. mysql may also be used in batch mode: you place your queries in a file beforehand, then tell mysql to execute the contents of the file. Both ways of using mysql are covered here. To see a list of options provided by mysql, invoke it with the --help option: $> mysql --help This chapter assumes that mysql is installed on your machine and that a MySQL server is available to which you can connect. If this is not true, contact your MySQL administrator. (If you are the administrator, you need to consult the relevant portions of this manual, such as MySQL Server Administration.) This chapter describes the entire process of setting up and using a database. If you are interested only in accessing an existing database, you may want to skip the sections that describe how to create the database and the tables it contains. Because this chapter is tutorial in nature, many details are necessarily omitted. Consult the relevant sections of the manual for more information on the topics covered here.' },
        { id: 5, type: 'text', name: 'Stored Procedures', content: 'This chapter provides a tutorial introduction to MySQL by showing how to use the mysql client program to create and use a simple database. mysql (sometimes referred to as the “terminal monitor” or just “monitor”) is an interactive program that enables you to connect to a MySQL server, run queries, and view the results. mysql may also be used in batch mode: you place your queries in a file beforehand, then tell mysql to execute the contents of the file. Both ways of using mysql are covered here. To see a list of options provided by mysql, invoke it with the --help option: $> mysql --help This chapter assumes that mysql is installed on your machine and that a MySQL server is available to which you can connect. If this is not true, contact your MySQL administrator. (If you are the administrator, you need to consult the relevant portions of this manual, such as MySQL Server Administration.) This chapter describes the entire process of setting up and using a database. If you are interested only in accessing an existing database, you may want to skip the sections that describe how to create the database and the tables it contains. Because this chapter is tutorial in nature, many details are necessarily omitted. Consult the relevant sections of the manual for more information on the topics covered here.' },
        { id: 6, type: 'text', name: 'MySQL Indexing', content: 'This chapter provides a tutorial introduction to MySQL by showing how to use the mysql client program to create and use a simple database. mysql (sometimes referred to as the “terminal monitor” or just “monitor”) is an interactive program that enables you to connect to a MySQL server, run queries, and view the results. mysql may also be used in batch mode: you place your queries in a file beforehand, then tell mysql to execute the contents of the file. Both ways of using mysql are covered here. To see a list of options provided by mysql, invoke it with the --help option: $> mysql --help This chapter assumes that mysql is installed on your machine and that a MySQL server is available to which you can connect. If this is not true, contact your MySQL administrator. (If you are the administrator, you need to consult the relevant portions of this manual, such as MySQL Server Administration.) This chapter describes the entire process of setting up and using a database. If you are interested only in accessing an existing database, you may want to skip the sections that describe how to create the database and the tables it contains. Because this chapter is tutorial in nature, many details are necessarily omitted. Consult the relevant sections of the manual for more information on the topics covered here.' },
        { id: 7, type: 'text', name: 'MySQL Backup and Restore', content: 'This chapter provides a tutorial introduction to MySQL by showing how to use the mysql client program to create and use a simple database. mysql (sometimes referred to as the “terminal monitor” or just “monitor”) is an interactive program that enables you to connect to a MySQL server, run queries, and view the results. mysql may also be used in batch mode: you place your queries in a file beforehand, then tell mysql to execute the contents of the file. Both ways of using mysql are covered here. To see a list of options provided by mysql, invoke it with the --help option: $> mysql --help This chapter assumes that mysql is installed on your machine and that a MySQL server is available to which you can connect. If this is not true, contact your MySQL administrator. (If you are the administrator, you need to consult the relevant portions of this manual, such as MySQL Server Administration.) This chapter describes the entire process of setting up and using a database. If you are interested only in accessing an existing database, you may want to skip the sections that describe how to create the database and the tables it contains. Because this chapter is tutorial in nature, many details are necessarily omitted. Consult the relevant sections of the manual for more information on the topics covered here.' },
        { id: 8, type: 'text', name: 'Advanced MySQL Features', content: 'This chapter provides a tutorial introduction to MySQL by showing how to use the mysql client program to create and use a simple database. mysql (sometimes referred to as the “terminal monitor” or just “monitor”) is an interactive program that enables you to connect to a MySQL server, run queries, and view the results. mysql may also be used in batch mode: you place your queries in a file beforehand, then tell mysql to execute the contents of the file. Both ways of using mysql are covered here. To see a list of options provided by mysql, invoke it with the --help option: $> mysql --help This chapter assumes that mysql is installed on your machine and that a MySQL server is available to which you can connect. If this is not true, contact your MySQL administrator. (If you are the administrator, you need to consult the relevant portions of this manual, such as MySQL Server Administration.) This chapter describes the entire process of setting up and using a database. If you are interested only in accessing an existing database, you may want to skip the sections that describe how to create the database and the tables it contains. Because this chapter is tutorial in nature, many details are necessarily omitted. Consult the relevant sections of the manual for more information on the topics covered here.' },
      ],
    },
};

const CourseDetails = () => {
  const { courseId } = useParams();
  const course = courseModules[courseId];
  const [selectedModule, setSelectedModule] = useState(null);
  const [completedModules, setCompletedModules] = useState([]);

  if (!course) {
    return <p>Course not found</p>;
  }

  const handleModuleClick = (module) => {
    setSelectedModule(module);
  };

  const handleCompleteClick = (module) => {
    if (!completedModules.includes(module.id)) {
      setCompletedModules([...completedModules, module.id]);
    }
  };

  return (
    <div className="course-details-container">
      <h2>{course.title} - Course Details</h2>
      <div className="course-content">
        <div className="module-list">
          {course.modules.map((module) => (
            <div
              key={module.id}
              className={`module-item ${completedModules.includes(module.id) ? 'completed' : ''}`}
              onClick={() => handleModuleClick(module)}
            >
              <p>{module.name}</p>
              {completedModules.includes(module.id) && (
                <FontAwesomeIcon icon={faCheckCircle} className="completed-icon" />
              )}
            </div>
          ))}
        </div>
        <div className="module-content">
          {selectedModule ? (
            <>
              <h3>{selectedModule.name}</h3>
              <p>{selectedModule.content}</p>
              <button
                className="complete-button"
                onClick={() => handleCompleteClick(selectedModule)}
              >
                Mark as Complete
              </button>
            </>
          ) : (
            <p>Select a module to view its content.</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default CourseDetails;

